apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
      - name: init-mongo
        image: mongo:latest
        command:
          - bash
          - -c
          - |
            mongod --fork --logpath /tmp/mongod.log &&
            sleep 5 &&
            mongosh admin --eval 'db.createUser({ user: "'${MONGO_INITDB_ROOT_USERNAME}'", pwd: "'${MONGO_INITDB_ROOT_PASSWORD}'", roles: [{ role: "root", db: "admin" }] })' &&
            mongosh admin --eval 'db.shutdownServer()'
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-password
      containers:
      - name: mongodb
        image: mongo:latest
        command: ["mongod", "--wiredTigerCacheSizeGB=0.25", "--bind_ip_all", "--auth"]
        ports:
        - containerPort: 27017
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "200m"
        env:
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongodb-database
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP